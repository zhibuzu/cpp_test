# 进程名
COMLOG_PROCNAME : DictParserLog
COMLOG_LEVEL : 16
# 支持的设备数目
COMLOG_DEVICE_NUM : 1 # 5
# 支持的自定义等级
# COMLOG_SELFDEFINE : URL
# 支持的设备名
# 这里有一个FILE，那么后面就有对应的FILE_XXX的配置
COMLOG_DEVICE0 : FILE
# COMLOG_DEVICE1 : AFILE
# COMLOG_DEVICE2 : NET
# COMLOG_DEVICE3 : ULLOG
# COMLOG_DEVICE4 : ULNET
 
# device 0: FILE
FILE_TYPE : FILE
# 路径及文件名
FILE_NAME : dict_parser.log
FILE_PATH : ../log
# 接收的系统界别为DEBUG
FILE_SYSLEVEL : 16
# 按时间切割，每分钟切割一次
FILE_SPLITE_TYPE : DATECUT
FILE_DATA_CUTTIME : 1
# 当日志被切割后，切割完的文件名=FILE_NAME.TIME，其中TIME按照下述格式(使用strftime的格式)
# 以下格式的日志被切割后的文件名是： filedemo.log.2009_01_19_15:32:21
# 默认格式是：filedemo.log.20090119153221
# RESERVED1字段只在FILE/AFILE类型中被使用
FILE_RESERVED1 : %Y_%m_%d_%H:%M:%S
# 必须为OPEN非零才可以使用这个设备
FILE_OPEN : 1
# FILE这个设备不接收自定义日志
 
# Device 1: AFILE
# 这是一个异步打印的文件日志，它不会阻塞日志打印的线程
# AFILE_TYPE : AFILE
# AFILE_NAME : afiledemo.log
# AFILE_PATH : ../log
# AFILE_SYSLEVEL : 16
# AFILE_OPEN : 1
# 按照文件大小切割，文件大小上限为1M
# AFILE_SPLITE_TYPE : SIZECUT
# AFILE_SIZE : 1
# 这个设备使用特殊的格式打印日志
# 默认的格式是：%L: %D: %P * %T [%N] %R
# AFILE_LAYOUT : | %L | %D | %P | %T | %R |
 
# Device 2: NET
# 这是一个向网络打印的日志设备，它的server端请向com组索取
# NET_TYPE : NET
# NET_NAME : netdemo.log
# NET_PATH : 127.0.0.1:9898/netlog
# NET_OPEN : 1
# 这个是网络日志，他只接收自定义级别的日志当然这里也可以写成DEBUG、FATAL等系统默认级别
# NET_SYSLEVEL : 0
# NET_SELFLEVEL : URL, hello
 
# 下面的ULLOG和ULNET是两个Adapter
# * 其中ULLOG相当于3个FILE设备：
# 分别打印NOTICE + TRACE + DEBUG级别的日志、
# WARNING + FATAl级别的日志、自定义级别的日志。
# * 而ULNET则相当于3个NET设备
 
# Device 3: ULLOG
# ULLOG_TYPE : ULLOG
# ULLOG_NAME : ullogdemo.log
# ULLOG_PATH : ../log
# ULLOG_SYSLEVEL : 16
# ULLOG_OPEN : 1
# 默认的SPLITE_TYPE是TRUNCT格式，即超过某个大小直接回滚
# ULLOG_SIZE : 2000
 
# Device 4: ULNET
# ULNET_TYPE : ULNET
# ULNET_NAME : ulnetdemo.log
# ULNET_PATH : 127.0.0.1:9898/log
# ULNET_OPEN : 1
# ULNET_SYSLEVEL : 0
# ULNET_SELFLEVEL : URL